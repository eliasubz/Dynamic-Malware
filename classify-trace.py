import sys
import joblib
import numpy as np
from sklearn.feature_extraction.text import CountVectorizer

# Ensure the correct usage of the program
if len(sys.argv) != 2:
    print("Usage: python classify-trace.py <input_file>")
    sys.exit(1)

input_file = sys.argv[1]

# Step 1: Load the best model
best_model = joblib.load("best_model.pkl")

# Step 2: Preprocess the input file (similar to how you preprocessed your dataset)
with open(input_file, "r") as f:
    traces = f.readlines()


def remove_repeated_calls(trace):
    calls = trace.strip().split(",")
    return ",".join(
        [calls[i] for i in range(len(calls)) if i == 0 or calls[i] != calls[i - 1]]
    )


processed_traces = [remove_repeated_calls(trace) for trace in traces]

# Step 3: Convert the traces into feature vectors
vectorizer = CountVectorizer(tokenizer=lambda x: x.split(","), binary=True)
X_new = vectorizer.fit_transform(processed_traces)

# Step 4: Use the trained model to predict labels
predicted_labels = best_model.predict(X_new)


# Step 5: Map the predicted numeric labels back to string labels
label_mapping = {
    0: "Downloader",
    1: "Dropper",
    2: "Spyware",
    8: "Adware",
    4: "Virus",
    5: "Trojan",
    6: "Worms",
    7: "Backdoor",
}

# Reverse the label mapping to make it easy to translate predictions back to labels
# Step 6: Output the predicted string labels
for label in predicted_labels:
    print(
        label_mapping.get(label, "Unknown Label")
    )  # Default to "Unknown Label" if not found
